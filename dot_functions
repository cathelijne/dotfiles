# functions

# Change cluster and namespace. Although this is better handled by kubecm nowadays.
function ktx {
    kubectl config use-context $(kubectl config get-contexts -o name | fzf --select-1 --exit-0 --prompt "Select cluster: ") && kns
}

# Change namespace
function kns {
    kubectl config set-context $(kubectl config current-context) \
            --namespace=$((kubectl get namespaces -o name | sed 's-namespace/--') \
            | fzf -1 -0 --prompt "Select namespace: " --preview="kubectl get pods --namespace={}" --preview-window=down:40)
}

# Collate stats from nodes
function kstats {
  kubectl get nodes \
    | awk 'FNR > 1 {print $1}' \
    | xargs -I {} sh -c 'echo {} ; kubectl describe node {} | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- ; echo '
}

# Connect to a Cisco Anyconnect vpn with fields retrieved from 1Password
# In 1Password create a new item with the following fields:
# - username
# - password
# - authgroup
# - server
# Call the function with the name of the 1Password item as argument
function vpn {
  $(op item get hoekit --format json |jq -r '.fields[] |("export " + (.label|ascii_downcase) + "=" + .value)')
  echo "Touch your Yubikey:"
  read "PASSWORD2"
  sudo -p "sudo: " openconnect -u ${username} --authgroup=${authgroup} --form-entry "main:password=${password}" --form-entry "main:secondary_password=${PASSWORD2}" ${server}
}
